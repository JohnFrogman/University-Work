// 			   	   Matrix Drawer				//
// 				   By Alex Hayes				//
// 				University of Liverpool			//
//												//
// Creates a matrix in hte constructor then 	//
// draws rextangles to the matrix with the 		//
// drawRectangle method. By repeatedly calling  //
// the drawRectangle method multiple rectangles //
// can be drawn to the same matrix. the 		//
// saveToFile method will then draw this matrix //
// to a txt document called rectangles.txt		//


import java.io.PrintWriter;
import java.io.FileOutputStream;

public class MatrixDrawer
{
	private char[][] drawingArea;
	private int height = 0;
	private int width = 0;

	// Instantiates the matrix used in the rest of the glass with the height and the width given by the user.
	public MatrixDrawer(int height, int width)
	{
		this.drawingArea = new char [height][width];
		this.height = height;
		this.width = width;
		
		for (int i = 0; i < height; i++)
		{
			for (int j = 0; j < width; j++)
			drawingArea[i][j] = ' ';
		}
	}
	
	// Fills the matrix with the filler character character in the appropriate places.
	
	// The rectangle is generated by taking the coordinates of the top left corner and the bottom right corner
	// before filling each space between them with the 'filler' character
	public void drawRectangle(int topLeftX, int topLeftY, int bottomRightX, int bottomRightY, char filler)
	{
		for (int i = topLeftX; i <= bottomRightX; i++)
		{
			for (int j = topLeftY; j <= bottomRightY; j++)
			drawingArea[i][j] = filler;
		}
	}
	
	// Draws the matrix to a .txt file.
	public void saveToFile() throws Exception
	{
		PrintWriter outStream = new PrintWriter(new FileOutputStream("rectangles.txt"));  
		for (int i = 0; i < height; i++)
		{
			for (int j = 0; j < width; j++)
			{
				outStream.write(drawingArea[i][j]);
				// When the end of the row is reached break the line.
				if ( j == width-1 ) 
				{
				// outStream.write(System.lineSeparator());  This is meant to be platform independent but it's not.
					outStream.write('\r');
					outStream.write('\n');
				}
			}
		}
		outStream.close();
	}
	
	// Prints the matrix that should be drawn.
	public void debug()
	{
		for (int i = 0; i < height; i++)
		{
			for (int j = 0; j < width; j++)
			{	
				if ( j == width-1 ) 
				{
					System.out.println(drawingArea[i][j]);
				}
				else
				{
					System.out.print(drawingArea[i][j]);
				}
			}
		}
	}
}